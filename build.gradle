apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'

defaultTasks 'build'

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

def libs = [
        molecule          : 'com.vtence.molecule:molecule:0.4-SNAPSHOT',
        simple            : 'org.simpleframework:simple:5.1.6',
        jmustache         : 'com.samskivert:jmustache:1.9',
        hamcrest_all      : 'org.hamcrest:hamcrest-all:1.3',
        hamcrest_dom      : ['org.antlr:antlr-runtime:3.0.1',
                             'com.3levers.cssselectors:cssselectors:1.0@jar',
                             'org.testinfected.hamcrest-matchers:dom-matchers:1.5@jar'],
        junit             : 'junit:junit:4.11@jar',
        jmock             : 'org.jmock:jmock:2.6.0@jar',
        jmock_junit4      : 'org.jmock:jmock-junit4:2.6.0@jar',
        htmlunit          : 'net.sourceforge.htmlunit:htmlunit:2.14',
        molecule_test     : 'com.vtence.molecule:molecule:0.4-SNAPSHOT:tests',
        selenium_api      : 'org.seleniumhq.selenium:selenium-api:2.41.0',
        selenium_remote   : 'org.seleniumhq.selenium:selenium-remote-driver:2.43.1',
        selenium_firefox  : 'org.seleniumhq.selenium:selenium-firefox-driver:2.43.1',
        selenium_phantom  : 'com.github.detro.ghostdriver:phantomjsdriver:1.1.0',
        windowlicker      : 'com.googlecode.windowlicker:windowlicker-web:r268',
        nolog             : ['org.slf4j:slf4j-api:1.5.6',
                             'org.slf4j:jcl-over-slf4j:1.5.6',
                             'org.slf4j:slf4j-nop:1.5.6']
]

dependencies {
    compile libs.molecule
    compile libs.simple
    compile libs.jmustache

    testCompile libs.hamcrest_all
    testCompile libs.hamcrest_dom
    testCompile libs.junit
    testCompile libs.jmock
    testCompile libs.jmock_junit4
    testCompile libs.htmlunit
    testCompile libs.molecule_test
    testCompile libs.selenium_api
    testCompile libs.selenium_firefox
    testCompile(libs.selenium_phantom) {
        exclude module: 'selenium-java'
        exclude module: 'selenium-server'
    }
    testCompile libs.windowlicker
    testCompile libs.nolog
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task coverage(dependsOn: ['test', 'jacocoTestReport'])

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

mainClassName = 'workshop.Example'
applicationName = 'example'

if (!project.hasProperty('port')) {
    ext.port = 8080
}

run {
    args port
    args file('src/main/webapp')
}

task stage(dependsOn: ['clean', 'installApp'])